{"version":3,"sources":["Constant/CoppyTable.tsx","Tabs/whereClause/Table/ResultTable.tsx","Constant/Data.tsx","Constant/Storage.tsx","Tabs/whereClause/WhereClaseIndex.tsx","Tabs/story/Story.tsx","Tabs/Extractor/Extractor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["copyTable","range","sel","elTable","document","getElementById","createRange","window","getSelection","removeAllRanges","selectNodeContents","addRange","e","selectNode","execCommand","console","log","ResultTable","state","setstate","useState","show","setshow","useEffect","result","Button","style","float","startIcon","variant","color","onClick","Box","pt","TableContainer","component","Paper","Table","size","id","TableHead","display","TableRow","TableCell","TableBody","map","row","fontSize","fontFamily","story","textTransform","mainObject","toLowerCase","whereClause","items","filter","item","Data","params","params2","ACTION","ACTIONGROUP","AUTOSCRIPT","CALENDAR","CLASSSTRUCTURE","COMMTEMPLATE","CONDITION","CRONTASKDEF","CTRLGROUP","MAXDOMAIN","ESCALATION","VST_GLOBMULTIVAL","LaunchPoints","MAXENDPOINT","MAXGROUP","MAXIFACECONTROL","MAXLOGAPPENDER","MAXLOGGER","MAXMESSAGES","MAXSERVICE","MEASUREUNIT","MAXOBJECTCFG","MAXINTOBJECT","PERSON","PERSONGROUP","MAXRELATIONSHIP","REPORT","REPORTDESIGN","MAXROLE","MAXAPPS","Screen","SCTEMPLATE","SHIFT","SIGOPTION","SYSPRES","MAXPRESENTATION","WFPROCESS","RESULT","STORYRESULT","setStorage","value","localStorage","setItem","JSON","stringify","storyResult","getStorage","res","getItem","storyres","parse","data","WhereClaseIndex","setstory","whereClause2","fetchData","a","store","options","Object","keys","index","Container","maxWidth","Grid","container","spacing","xs","Autocomplete","onChange","event","newValue","width","renderInput","TextField","fullWidth","label","target","prevState","test","mstory","match","lastIndex","length","returnData","resultValue","Story","asBuilt","summary","sm","Link","href","resval","Extractor","TextareaAutosize","placeholder","rowsMin","rowsMax","replaceAll","extractornator","TabPanel","props","children","other","role","hidden","p","Typography","a11yProps","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","App","classes","useTheme","setValue","className","AppBar","position","Tabs","indicatorColor","textColor","Tab","mt","md","axis","direction","onChangeIndex","dir","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.375cd75b.chunk.js","sourcesContent":["export const copyTable2 = () => {\r\n  const elTable: any = document.querySelector(\"table\");\r\n\r\n  let range, sel;\r\n\r\n  // Ensure that range and selection are supported by the browsers\r\n  if (document.createRange && window.getSelection) {\r\n    range = document.createRange();\r\n    sel = window.getSelection();\r\n    // unselect any element in the page\r\n\r\n    sel?.removeAllRanges();\r\n\r\n    try {\r\n      range.selectNodeContents(elTable);\r\n      sel?.addRange(range);\r\n    } catch (e) {\r\n      range.selectNode(elTable);\r\n      sel?.addRange(range);\r\n    }\r\n\r\n    document.execCommand(\"copy\");\r\n  }\r\n\r\n  sel?.removeAllRanges();\r\n\r\n  console.log(\"Element Copied! Paste it in a file\");\r\n};\r\n\r\nexport const copyTable = () => {\r\n  const elTable: any = document.getElementById(`table`);\r\n\r\n  let range, sel;\r\n\r\n  // Ensure that range and selection are supported by the browsers\r\n  if (document.createRange && window.getSelection) {\r\n    range = document.createRange();\r\n    sel = window.getSelection();\r\n    // unselect any element in the page\r\n\r\n    sel?.removeAllRanges();\r\n\r\n    try {\r\n      range.selectNodeContents(elTable);\r\n      sel?.addRange(range);\r\n    } catch (e) {\r\n      range.selectNode(elTable);\r\n      sel?.addRange(range);\r\n    }\r\n\r\n    document.execCommand(\"copy\");\r\n  }\r\n\r\n  sel?.removeAllRanges();\r\n\r\n  console.log(\"Element Copied! Paste it in a file\");\r\n};\r\n","import {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport { copyTable } from \"../../../Constant/CoppyTable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function ResultTable({ state, setstate }: any) {\r\n  const [show, setshow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!show) {\r\n      copyTable();\r\n    }\r\n    setshow(true);\r\n  }, [show]);\r\n\r\n  if (state.result === 0) return <div></div>;\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ float: \"right\" }}\r\n        startIcon={<AssignmentIcon />}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          setshow(false);\r\n        }}\r\n      >\r\n        Copy\r\n      </Button>\r\n      <Box pt={6}>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\" aria-label=\"a dense table\" id=\"table\">\r\n            <TableHead style={{ display: show ? \"contents\" : \"none\" }}>\r\n              <TableRow>\r\n                <TableCell>Story</TableCell>\r\n                <TableCell>Main Object</TableCell>\r\n                <TableCell>Where Caluse</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {state.result.map((row: any) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell style={{ fontSize: \"21px\", fontFamily: \"Calibri\" }}>{row.story}</TableCell>\r\n                  <TableCell style={{ textTransform: \"capitalize\", fontSize: \"21px\", fontFamily: \"Calibri\" }}>\r\n                    {row.mainObject.toLowerCase()}\r\n                  </TableCell>\r\n                  <TableCell style={{ fontSize: \"21px\", fontFamily: \"Calibri\" }}>{row.whereClause}</TableCell>\r\n                  <TableCell style={{ display: show ? \"block\" : \"none\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      startIcon={<DeleteIcon />}\r\n                      onClick={() => {\r\n                        let items = state.result.filter((item: any) => item.id !== row.id);\r\n\r\n                        setstate(items);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","export const Data: any = (params: any, params2: any) => {\r\n  const dataTemplate = {\r\n    ACTION: `ACTION = '${params}'`,\r\n    ACTIONGROUP: `ACTION = '${params}'`,\r\n    // AssetAttribute: `assetattrid in (select assetattrid from maximo.classspec where classstructureid in ('7955'))`,\r\n    AUTOSCRIPT: `AUTOSCRIPT = '${params}'`,\r\n    CALENDAR: `CALNUM = '${params}'`,\r\n    CLASSSTRUCTURE: `CLASSSTRUCTUREID =  '${params}'`,\r\n    COMMTEMPLATE: `TEMPLATEID = '${params}'`,\r\n    CONDITION: `CONDITIONNUM = '${params}'`,\r\n    CRONTASKDEF: `CRONTASKNAME = '${params}'`,\r\n    CTRLGROUP: `APP = '${params}'`,\r\n    MAXDOMAIN: `DOMAINID = '${params}'`,\r\n    ESCALATION: `ESCALATION = '${params}'`,\r\n    VST_GLOBMULTIVAL: `VST_GMVNAME = '${params}'`,\r\n    LaunchPoints: `LAUNCHPOINTNAME = '${params}' `,\r\n    MAXENDPOINT: `ENDPOINTNAME = '${params}'`,\r\n    MAXGROUP: `GROUPNAME = '${params}'`,\r\n    MAXIFACECONTROL: `IFACECONTROL = '${params}'`,\r\n    MAXLOGAPPENDER: `APPENDER = '${params}'`,\r\n    MAXLOGGER: `LOGKEY = '${params}'`,\r\n    MAXMESSAGES: `MSGGROUP = '${params}' AND MSGKEY = '${params2}'`,\r\n    MAXSERVICE: `SERVICENAME = '${params}'`,\r\n    MEASUREUNIT: `MEASUREUNITID = '${params}'`,\r\n    MAXOBJECTCFG: `OBJECTNAME = '${params}'`,\r\n    MAXINTOBJECT: `INTOBJECTNAME = '${params}'`,\r\n    PERSON: `PERSONID = '${params}'`,\r\n    PERSONGROUP: `PERSONGROUP = '${params}'`,\r\n    // MAXMENU: `(menutype = 'MODULE' and keyvalue = 'CP_PMBASIS') or moduleapp = 'CP_PMBASIS'`,\r\n    // QUERY: `app = 'PLUSWOTR' and clausename = 'CP_ PEGHOLD' AND owner  = 'MAXADMIN'`,\r\n    MAXRELATIONSHIP: `PARENT = '${params}' AND NAME = '${params2}'`,\r\n    REPORT: `APPNAME = '${params}' AND REPORTNAME = '${params2}'`,\r\n    REPORTDESIGN: `REPORTNAME = '${params}'`,\r\n    MAXROLE: `MAXROLE = '${params}'`,\r\n    MAXAPPS: `APP = '${params}'`,\r\n    Screen: `APP = '${params}'`,\r\n    SCTEMPLATE: `NAME = '${params}'`,\r\n    // SECURITYRESTRICT: `OBJECTNAME = 'WORKORDER' AND ATTRIBUTENAME = 'DESCRIPTION' AND APP = 'PLUSCMT' AND CONDITIONNUM = 'CP_CMT_REGAF'`,\r\n    SHIFT: `SHIFTNUM = '${params}'`,\r\n    SIGOPTION: `APP = '${params}'`,\r\n    SYSPRES: `APP = '${params}'`,\r\n    MAXPRESENTATION: `APP = '${params}'`,\r\n    WFPROCESS: `PROCESSNAME = '${params}'`,\r\n  };\r\n\r\n  return dataTemplate;\r\n};\r\n","const RESULT = \"RESULT\";\r\nconst STORYRESULT = \"STORYRESULT\";\r\n\r\ninterface Istore {\r\n  result: Array<any> | null;\r\n  storyResult: Array<any> | null;\r\n}\r\n\r\nexport const setStorage = (value: Istore) => {\r\n  localStorage.setItem(RESULT, JSON.stringify(value.result));\r\n  localStorage.setItem(STORYRESULT, JSON.stringify(value.storyResult));\r\n};\r\n\r\nexport const clearStorage = () => {\r\n  localStorage.setItem(RESULT, \"\");\r\n  localStorage.setItem(STORYRESULT, \"\");\r\n};\r\n\r\nexport function getStorage(): any {\r\n  const res = localStorage.getItem(RESULT) + \"\";\r\n  const storyres = localStorage.getItem(STORYRESULT) + \"\";\r\n  const test = {\r\n    result: res ? JSON.parse(res) : [],\r\n    storyResult: storyres ? JSON.parse(storyres) : [],\r\n  };\r\n\r\n  return test;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Box, Container, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ResultTable from \"./Table/ResultTable\";\r\nimport { Data } from \"../../Constant/Data\";\r\nimport { setStorage, getStorage } from \"../../Constant/Storage\";\r\n\r\nconst data = Data(\"dqwdqw\");\r\n\r\nexport default function WhereClaseIndex(story: any, setstory: any) {\r\n  const [state, setstate]: any = useState({\r\n    whereClause: null,\r\n    whereClause2: null,\r\n    mainObject: null,\r\n    result: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const store = getStorage();\r\n\r\n      if (!!store.result) {\r\n        setstate(store);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const options = Object.keys(data).map((item, index) => {\r\n    return item;\r\n  });\r\n\r\n  return (\r\n    <Box>\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"mainObject\"\r\n              options={options}\r\n              // getOptionLabel={options}\r\n              onChange={(event: any, newValue: any) => {\r\n                setstate({ ...state, mainObject: newValue });\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n              renderInput={(params) => <TextField {...params} fullWidth label=\"Main Object\" variant=\"outlined\" />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"WhereCaluse\"\r\n              label=\"Where Clause\"\r\n              variant=\"outlined\"\r\n              onChange={(e: any) => {\r\n                setstate({ ...state, whereClause: e.target.value });\r\n              }}\r\n            />\r\n          </Grid>\r\n          {state.mainObject === \"MAXRELATIONSHIP\" || state.mainObject === \"REPORT\" ? (\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"WhereCaluse\"\r\n                label=\"Where Clause2\"\r\n                variant=\"outlined\"\r\n                onChange={(e: any) => {\r\n                  setstate({ ...state, whereClause2: e.target.value });\r\n                }}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              style={{ width: \"100%\" }}\r\n              startIcon={<AddIcon />}\r\n              onClick={() => {\r\n                setstate((prevState: any) => {\r\n                  const dataTemp = Data(state.whereClause, state.whereClause2);\r\n                  const test = dataTemp[prevState.mainObject];\r\n\r\n                  const mstory = story.story.match(/MX-.+/g);\r\n                  const lastIndex =\r\n                    prevState.result.length === 0 ? 0 : prevState.result[prevState.result.length - 1].id + 1;\r\n\r\n                  const returnData = {\r\n                    ...prevState,\r\n                    result: [\r\n                      ...prevState.result,\r\n                      {\r\n                        id: lastIndex,\r\n                        story: mstory,\r\n                        whereClause: test,\r\n                        mainObject: prevState.mainObject,\r\n                      },\r\n                    ],\r\n                  };\r\n\r\n                  setStorage(returnData);\r\n                  return returnData;\r\n                });\r\n              }}\r\n            >\r\n              ADD\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ResultTable\r\n              state={state}\r\n              setstate={(data: any) => {\r\n                setstate((prevState: any) => {\r\n                  const resultValue = { ...prevState, result: data };\r\n\r\n                  setStorage(resultValue);\r\n                  return resultValue;\r\n                });\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport { copyTable } from \"../../Constant/CoppyTable\";\r\nimport { getStorage, setStorage } from \"../../Constant/Storage\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport default function Story(story: any, setstory: any) {\r\n  const [state, setstate] = useState({\r\n    asBuilt: \"\",\r\n    summary: \"\",\r\n    storyResult: [],\r\n  });\r\n\r\n  const [show, setshow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!show) {\r\n      copyTable();\r\n    }\r\n    setshow(true);\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const store = getStorage();\r\n      if (!!store.storyResult) {\r\n        setstate(store);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          fullWidth\r\n          id=\"summary\"\r\n          label=\"summary\"\r\n          variant=\"outlined\"\r\n          onChange={(e: any) => {\r\n            setstate({ ...state, summary: e.target.value });\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          fullWidth\r\n          id=\"as-buit\"\r\n          label=\"As-Built\"\r\n          variant=\"outlined\"\r\n          onChange={(e: any) => {\r\n            setstate({ ...state, asBuilt: e.target.value });\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ width: \"100%\" }}\r\n          startIcon={<AddIcon />}\r\n          size=\"large\"\r\n          onClick={() => {\r\n            setstate((prevState: any) => {\r\n              const mstory = story.story.match(/MX-.+/g);\r\n              const lastIndex =\r\n                prevState.storyResult.length === 0\r\n                  ? 0\r\n                  : prevState.storyResult[prevState.storyResult.length - 1].id + 1;\r\n\r\n              const returnData = {\r\n                ...prevState,\r\n                storyResult: [\r\n                  ...prevState.storyResult,\r\n                  {\r\n                    id: lastIndex,\r\n                    story: mstory,\r\n                    asBuilt: prevState.asBuilt,\r\n                    summary: prevState.summary,\r\n                  },\r\n                ],\r\n              };\r\n              setStorage(returnData);\r\n              return returnData;\r\n            });\r\n          }}\r\n        >\r\n          ADD\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          style={{ float: \"right\" }}\r\n          startIcon={<AssignmentIcon />}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setshow(false)}\r\n        >\r\n          Copy\r\n        </Button>\r\n      </Grid>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table id=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead style={{ display: show ? \"contents\" : \"none\" }}>\r\n            <TableRow>\r\n              <TableCell>Story</TableCell>\r\n              <TableCell>summary</TableCell>\r\n              <TableCell></TableCell>\r\n              <TableCell>As-Built</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {state.storyResult.map((row: any) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell style={{ fontSize: \"21px\", fontFamily: \"Calibri\" }}>{row.story}</TableCell>\r\n                <TableCell style={{ fontSize: \"21px\", fontFamily: \"Calibri\" }}>{row.summary}</TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell style={{ textTransform: \"capitalize\", fontSize: \"21px\", fontFamily: \"Calibri\" }}>\r\n                  {row.asBuilt ? (\r\n                    <Link href={row.asBuilt} target=\"_blank\">\r\n                      As-Built\r\n                    </Link>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  \r\n                </TableCell>\r\n                <TableCell style={{ display: show ? \"block\" : \"none\" }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {\r\n                      let items = state.storyResult.filter((item: any) => item.id !== row.id);\r\n                      setstate((prevState: any) => {\r\n                        const resval = { ...prevState, storyResult: items };\r\n                        setStorage(resval);\r\n\r\n                        return resval;\r\n                      });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Button, TextareaAutosize } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function Extractor() {\r\n  const [state, setstate] = useState(\"\");\r\n\r\n  useEffect(() => {}, [state]);\r\n\r\n  const extractornator = () => {\r\n    const ampPatt = /&/g;\r\n    const ltPatt = /</g;\r\n    const gtPatt = />/g;\r\n\r\n    let data = state;\r\n    data = data.replaceAll(ampPatt, \"&amp;\");\r\n    data = data.replaceAll(ltPatt, \"&lt;\");\r\n    data = data.replaceAll(gtPatt, \"&gt;\");\r\n    setstate(data);\r\n\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <TextareaAutosize\r\n        style={{ width: \"100%\" }}\r\n        aria-label=\"empty textarea\"\r\n        placeholder=\"Empty\"\r\n        value={state}\r\n        rowsMin={10}\r\n        rowsMax={10}\r\n        onChange={(e) => {\r\n          setstate(e.target.value);\r\n        }}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          extractornator();\r\n        }}\r\n      >\r\n        Extractinator\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import WhereClaseIndex from \"./Tabs/whereClause/WhereClaseIndex\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useState } from \"react\";\r\nimport { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport Story from \"./Tabs/story/Story\";\r\nimport { clearStorage } from \"./Constant/Storage\";\r\nimport Extractor from \"./Tabs/Extractor/Extractor\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const [story, setstory] = useState(\"\");\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index: number) => {\r\n    setValue(index);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"full width tabs example\"\r\n          >\r\n            <Tab label=\"Jira\" {...a11yProps(0)} />\r\n            <Tab label=\"Where Clause\" {...a11yProps(1)} />\r\n            <Tab label=\"EXTRATINATOR\" {...a11yProps(2)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <Box mt={3}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={9} md={9}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"story\"\r\n                label=\"Story\"\r\n                variant=\"outlined\"\r\n                onChange={(e: any) => {\r\n                  setstory(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3} md={3}>\r\n              <Button\r\n                startIcon={<DeleteForeverIcon />}\r\n                style={{ width: \"100%\" }}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  clearStorage();\r\n                }}\r\n              >\r\n                Clear all data\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <Story story={story} setstory={setstory} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            <WhereClaseIndex story={story} setstory={setstory} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2} dir={theme.direction}>\r\n            <Extractor />\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}